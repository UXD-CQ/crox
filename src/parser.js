var parse = function() {
	var table = {//conflicts: 4
		"nStart": 41,
		"tSymbols": /*67*/["$", "!", "\u0026\u0026", "(", ")", "+", ",", "-", ".", ":", "=", "[", "]", "boolean", "eq", "include", "mul", "null", "number", "rawtext", "realId", "rel", "set", "string", "text", "{", "{{", "{{#each", "{{#forin", "{{#if", "{{#raw}}", "{{/each}}", "{{/forin}}", "{{/if}}", "{{/raw}}", "{{else}}", "{{{", "||", "}", "}}", "}}}", "AdditiveExpression", "ArrayLiteral", "ElementList", "Elision", "EqualityExpression", "LogicalAndExpression", "LogicalOrExpression", "MemberExpression", "MultiplicativeExpression", "ObjectLiteral", "PrimaryExpression", "PropertyAssignment", "PropertyNameAndValueList", "RelationalExpression", "UnaryExpression", "_text", "args", "empty", "expr", "id", "name", "program", "statement", "statements", "texts", "program\u0027"],
		actionList: [{ "_": -2 }, { "_": -32768 }, { "24": 11, "26": 9, "27": 7, "28": 8, "29": 6, "30": 12, "36": 10, "_": -1 }, { "_": -3 }, { "24": 11, "30": 12, "_": -13 }, { "_": -17 }, { "1": 37, "3": 33, "7": 38, "11": 35, "13": 32, "15": 28, "17": 34, "18": 31, "20": 30, "22": 27, "23": 29, "25": 36, "_": 0 }, { "1": 37, "3": 33, "7": 38, "11": 35, "13": 32, "15": 43, "17": 34, "18": 31, "20": 30, "22": 42, "23": 29, "25": 36, "_": 0 }, { "_": -19 }, { "19": 45, "_": 0 }, { "_": -18 }, { "_": -27 }, { "_": -45 }, { "_": -29 }, { "_": -30 }, { "3": 46, "8": 48, "11": 47, "_": -52 }, { "_": -55 }, { "16": 49, "_": -57 }, { "5": 51, "7": 50, "_": -60 }, { "21": 52, "_": -62 }, { "14": 53, "_": -64 }, { "2": 54, "_": -66 }, { "37": 55, "_": -68 }, { "39": 56, "_": 0 }, { "_": -22 }, { "_": -23 }, { "_": -24 }, { "_": -21 }, { "_": -25 }, { "_": -26 }, { "_": -31 }, { "6": 62, "12": 61, "_": -69 }, { "15": 28, "20": 30, "22": 27, "23": 67, "38": 68, "_": 0 }, { "15": 28, "20": 30, "22": 27, "23": 67, "_": 0 }, { "39": 73, "_": 0 }, { "3": 33, "11": 35, "13": 32, "15": 28, "17": 34, "18": 31, "20": 30, "22": 27, "23": 29, "25": 36, "_": -22 }, { "23": 75, "_": -23 }, { "40": 76, "_": 0 }, { "34": 77, "_": 0 }, { "1": 37, "3": 33, "7": 38, "11": 35, "13": 32, "15": 28, "17": 34, "18": 31, "20": 30, "22": 27, "23": 29, "25": 36, "_": -69 }, { "15": 28, "20": 30, "22": 27, "_": 0 }, { "_": -2 }, { "4": 91, "_": 0 }, { "6": 93, "12": 92, "_": 0 }, { "1": 37, "3": 33, "6": 95, "7": 38, "11": 35, "13": 32, "15": 28, "17": 34, "18": 31, "20": 30, "22": 27, "23": 29, "25": 36, "_": 0 }, { "_": -32 }, { "_": -38 }, { "9": 97, "_": 0 }, { "_": -16 }, { "6": 98, "38": 99, "_": 0 }, { "_": -42 }, { "_": -15 }, { "_": -40 }, { "_": -53 }, { "_": -54 }, { "15": 28, "20": 30, "22": 27, "23": 67, "_": -69 }, { "_": -11 }, { "3": 46, "8": 48, "10": 104, "11": 47, "_": 0 }, { "39": 105, "_": 0 }, { "_": -12 }, { "_": -20 }, { "4": 106, "6": 107, "_": 0 }, { "_": -50 }, { "4": 108, "_": 0 }, { "12": 109, "_": 0 }, { "_": -46 }, { "_": -56 }, { "16": 49, "_": -59 }, { "16": 49, "_": -58 }, { "5": 51, "7": 50, "_": -61 }, { "21": 52, "_": -63 }, { "14": 53, "_": -65 }, { "2": 54, "_": -67 }, { "24": 11, "26": 9, "27": 7, "28": 8, "29": 6, "30": 12, "33": 110, "35": 111, "36": 10, "_": 0 }, { "_": -28 }, { "_": -33 }, { "6": 62, "_": -69 }, { "_": -34 }, { "_": -39 }, { "_": -35 }, { "_": -41 }, { "39": 116, "_": 0 }, { "39": 117, "_": 0 }, { "39": 118, "_": 0 }, { "39": 119, "_": 0 }, { "_": -14 }, { "_": -48 }, { "_": -49 }, { "_": -47 }, { "_": -4 }, { "_": -2 }, { "_": -44 }, { "_": -43 }, { "_": -2 }, { "_": -2 }, { "39": 129, "_": 0 }, { "_": -51 }, { "24": 11, "26": 9, "27": 7, "28": 8, "29": 6, "30": 12, "33": 130, "36": 10, "_": 0 }, { "_": -36 }, { "_": -37 }, { "24": 11, "26": 9, "27": 7, "28": 8, "29": 6, "30": 12, "31": 131, "36": 10, "_": 0 }, { "24": 11, "26": 9, "27": 7, "28": 8, "29": 6, "30": 12, "31": 132, "36": 10, "_": 0 }, { "24": 11, "26": 9, "27": 7, "28": 8, "29": 6, "30": 12, "32": 133, "36": 10, "_": 0 }, { "24": 11, "26": 9, "27": 7, "28": 8, "29": 6, "30": 12, "32": 134, "36": 10, "_": 0 }, { "_": -10 }, { "_": -5 }, { "_": -6 }, { "_": -7 }, { "_": -8 }, { "_": -9 }],
		actionIndex: [0, 1, 2, 3, 4, 5, 6, 6, 6, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 6, 30, 31, 32, 6, 6, 33, 33, 34, 35, 36, 37, 38, 39, 6, 40, 6, 6, 6, 6, 6, 6, 6, 41, 42, 43, 44, 6, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 6, 33, 80, 81, 82, 83, 84, 6, 85, 86, 6, 87, 88, 89, 90, 44, 6, 91, 92, 93, 93, 94, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109],
		"tGoto": /*135*/[{ "62": 1, "64": 2 }, {}, { "63": 3, "65": 4, "56": 5 }, {}, { "56": 13 }, {}, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 18, "55": 19, "49": 20, "41": 21, "54": 22, "45": 23, "46": 24, "47": 25, "59": 26 }, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 18, "55": 19, "49": 20, "41": 21, "54": 22, "45": 23, "46": 24, "47": 25, "59": 39 }, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 18, "55": 19, "49": 20, "41": 21, "54": 22, "45": 23, "46": 24, "47": 25, "59": 40 }, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 18, "55": 19, "49": 20, "41": 21, "54": 22, "45": 23, "46": 24, "47": 25, "59": 41 }, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 18, "55": 19, "49": 20, "41": 21, "54": 22, "45": 23, "46": 24, "47": 25, "59": 44 }, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 18, "55": 19, "49": 20, "41": 21, "54": 22, "45": 23, "46": 24, "47": 25, "59": 57 }, {}, { "43": 58, "44": 59, "58": 60 }, { "61": 63, "60": 64, "53": 65, "52": 66 }, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 18, "55": 69 }, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 18, "55": 70 }, { "61": 71, "60": 64 }, { "61": 72, "60": 64 }, {}, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 74 }, {}, {}, {}, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 18, "57": 78, "55": 19, "49": 20, "41": 21, "54": 22, "45": 23, "46": 24, "47": 25, "59": 79, "58": 80 }, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 18, "55": 19, "49": 20, "41": 21, "54": 22, "45": 23, "46": 24, "47": 25, "59": 81 }, { "60": 82 }, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 18, "55": 83 }, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 18, "55": 19, "49": 84 }, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 18, "55": 19, "49": 85 }, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 18, "55": 19, "49": 20, "41": 86 }, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 18, "55": 19, "49": 20, "41": 21, "54": 87 }, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 18, "55": 19, "49": 20, "41": 21, "54": 22, "45": 88 }, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 18, "55": 19, "49": 20, "41": 21, "54": 22, "45": 23, "46": 89 }, { "64": 90 }, {}, {}, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 18, "55": 19, "49": 20, "41": 21, "54": 22, "45": 23, "46": 24, "47": 25, "59": 94 }, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 18, "55": 19, "49": 20, "41": 21, "54": 22, "45": 23, "46": 24, "47": 25, "59": 96 }, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, { "61": 100, "60": 64, "58": 101 }, { "61": 102, "60": 64, "58": 103 }, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, { "63": 3, "65": 4, "56": 5 }, {}, {}, { "44": 112, "58": 113 }, {}, {}, {}, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 18, "55": 19, "49": 20, "41": 21, "54": 22, "45": 23, "46": 24, "47": 25, "59": 114 }, { "61": 63, "60": 64, "52": 115 }, {}, {}, {}, {}, {}, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 18, "55": 19, "49": 20, "41": 21, "54": 22, "45": 23, "46": 24, "47": 25, "59": 120 }, {}, {}, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 18, "55": 19, "49": 20, "41": 21, "54": 22, "45": 23, "46": 24, "47": 25, "59": 121 }, {}, {}, {}, { "64": 122 }, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 18, "55": 19, "49": 20, "41": 21, "54": 22, "45": 23, "46": 24, "47": 25, "59": 123 }, { "60": 14, "51": 15, "42": 16, "50": 17, "48": 18, "55": 19, "49": 20, "41": 21, "54": 22, "45": 23, "46": 24, "47": 25, "59": 124 }, {}, {}, { "64": 125 }, { "64": 126 }, { "64": 127 }, { "64": 128 }, {}, {}, { "63": 3, "65": 4, "56": 5 }, {}, {}, { "63": 3, "65": 4, "56": 5 }, { "63": 3, "65": 4, "56": 5 }, { "63": 3, "65": 4, "56": 5 }, { "63": 3, "65": 4, "56": 5 }, {}, {}, {}, {}, {}, {}],
		"tRules": /*70*/[[66, 62], [62, 64], [64], [64, 64, 63], [63, 29, 59, 39, 64, 33], [63, 29, 59, 39, 64, 35, 64, 33], [63, 27, 59, 61, 61, 39, 64, 31], [63, 27, 59, 61, 58, 39, 64, 31], [63, 28, 59, 61, 61, 39, 64, 32], [63, 28, 59, 61, 58, 39, 64, 32], [63, 26, 22, 48, 10, 59, 39], [63, 26, 59, 39], [63, 36, 59, 40], [63, 65], [63, 26, 15, 23, 39], [61, 23], [61, 60], [65, 56], [65, 65, 56], [56, 24], [56, 30, 19, 34], [60, 20], [60, 22], [60, 15], [51, 23], [51, 18], [51, 13], [51, 60], [51, 3, 59, 4], [51, 42], [51, 50], [51, 17], [42, 11, 12], [42, 11, 43, 12], [43, 44, 59], [43, 58, 59], [43, 43, 6, 44, 59], [43, 43, 6, 58, 59], [44, 6], [44, 44, 6], [50, 25, 38], [50, 25, 53, 38], [53, 52], [53, 53, 6, 52], [52, 61, 9, 59], [48, 51], [48, 48, 8, 60], [48, 48, 11, 59, 12], [48, 48, 3, 57, 4], [48, 48, 3, 58, 4], [57, 59], [57, 57, 6, 59], [55, 48], [55, 1, 55], [55, 7, 55], [49, 55], [49, 49, 16, 55], [41, 49], [41, 41, 5, 49], [41, 41, 7, 49], [54, 41], [54, 54, 21, 41], [45, 54], [45, 45, 14, 54], [46, 45], [46, 46, 2, 45], [47, 46], [47, 47, 37, 46], [59, 47], [58]],
		"objCharset": null
	}
	;
	function parse(lexer, others) {
		var nStart = table.nStart;
		var tSymbols = table.tSymbols;
		var tSymbolIndex = {};
		for (var i = 0; i < tSymbols.length; ++i)
			tSymbolIndex[tSymbols[i]] = i;
		var tAction = table.tAction || table.actionList;
		var tGoto = table.tGoto;
		var tRules = table.tRules;
		var tCodes = table.tCodes;
		var actionIndex = table.actionIndex;
		function $f0($1, $2, $3, $4, $5, $6, $7) { var $$; { $$ = ['each', $2, $6, $4, $3, true]; } return $$; }
		function $f1($1, $2, $3, $4, $5, $6, $7) { var $$; { $$ = ['each', $2, $6, $4, $3, false]; } return $$; }
		function $f2($1) { var $$; { $$ = $1.text; } return $$; }
		function $f3($1, $2) { var $$; { $$ = Array($1 || 0); $$.push($2); } return $$; }
		function $f4($1, $2, $3, $4) { var $$; { if ($3) $1.length += $3; ($$ = $1).push($4); } return $$; }
		function $f5($1) { var $$; { $$ = [$1]; } return $$; }
		function $f6($1, $2, $3, $4) { var $$; { $$ = ['()', $1, $3]; } return $$; }
		function $f7($1, $2, $3) { var $$; { $$ = [$2.text, $1, $3]; } return $$; } var tFuncs = [, function($1) { var $$; { $$ = ['prog', $1]; } return $$; }, function() { var $$; { $$ = []; } return $$; }, function($1, $2) { var $$; { $1.push($2); $$ = $1; } return $$; }, function($1, $2, $3, $4, $5) { var $$; { $$ = ['if', $2, $4]; } return $$; }, function($1, $2, $3, $4, $5, $6, $7) { var $$; { $$ = ['if', $2, $4, $6]; } return $$; }, $f0, $f0, $f1, $f1, function($1, $2, $3, $4, $5, $6) { var $$; { $$ = ['set', $3[0] == 'id' ? $3[1] : $3, $5]; } return $$; }, function($1, $2, $3) { var $$; { $$ = ['eval', $2, false]; } return $$; }, function($1, $2, $3) { var $$; { $$ = ['eval', $2, true]; } return $$; }, function($1) { var $$; { $$ = ['text', $1]; } return $$; }, function($1, $2, $3, $4) { var $$; { $$ = ['inc', evalStr($3.text)]; } return $$; }, function($1) { var $$; { $$ = evalStr($1.text); } return $$; }, $f2, function($1) { var $$; { $$ = $1; } return $$; }, function($1, $2) { var $$; { $$ = $1 + $2; } return $$; }, $f2, function($1, $2, $3) { var $$; { $$ = $2.text; } return $$; }, , , , function($1) { var $$; { $$ = ['lit', evalStr($1.text)]; } return $$; }, function($1) { var $$; { $$ = ['lit', evalNum($1.text)]; } return $$; }, function($1) { var $$; { $$ = ['lit', $1.text == 'true']; } return $$; }, function($1) { var $$; { $$ = ['id', $1.text]; } return $$; }, function($1, $2, $3) { var $$; { $$ = $2; } return $$; }, , , function($1) { var $$; { $$ = ['null']; } return $$; }, function($1, $2) { var $$; { $$ = ['array', []]; } return $$; }, function($1, $2, $3) { var $$; { $$ = ['array', $2]; } return $$; }, $f3, $f3, $f4, $f4, function($1) { var $$; { $$ = 1; } return $$; }, function($1, $2) { var $$; { $$ = $1 + 1; } return $$; }, function($1, $2) { var $$; { $$ = ['object', []]; } return $$; }, function($1, $2, $3) { var $$; { $$ = ['object', $2]; } return $$; }, $f5, function($1, $2, $3) { var $$; { $1.push($3); $$ = $1; } return $$; }, function($1, $2, $3) { var $$; { $$ = ['init', $1, $3]; } return $$; }, , function($1, $2, $3) { var $$; { $$ = ['.', $1, $3.text]; } return $$; }, function($1, $2, $3, $4) { var $$; { $$ = ['[]', $1, $3]; } return $$; }, $f6, $f6, $f5, function($1, $2, $3) { var $$; { ($$ = $1).push($3); } return $$; }, , function($1, $2) { var $$; { $$ = ['!', $2]; } return $$; }, function($1, $2) { var $$; { $$ = ['u-', $2]; } return $$; }, , $f7, , $f7, $f7, , $f7, , $f7, , $f7, , $f7];
		function getAction(x, y) {
			return tAction[x][y];
		}
		var stateNum = tAction.length;

		if (actionIndex) {
			getAction = function(x, y) {
				var list = tAction[actionIndex[x]];
				return list[y] || list._;
			};
			stateNum = actionIndex.length;
		}

		function getToken() {
			var t = lexer.scan();
			return t;
		}

		var s = 0;
		var stateStack = [0];
		var a = getToken();
		var valueStack = [];
		var obj = {
			get: function(i) {
				return valueStack[valueStack.length + i];
			},
			set: function(i, v) {
				valueStack[valueStack.length + i] = v;
			}
		};
		if (others) for (var i in others)
			obj[i] = others[i];
		var $smb = valueStack;

		while (1) {
			var $top = $smb.length - 1;
			var t = getAction(s, tSymbolIndex[a.tag]);
			if (!t) {
				var okTokens = [];
				for (var j = 0; j < nStart; ++j) {
					if (getAction(s, j))
						okTokens.push(tSymbols[j]);
				}
				err('find ' + a.tag + '\nexpect ' + okTokens.join(' '));
			}
			else if (t > 0) {
				stateStack.push(s = t);
				valueStack.push(a);
				a = getToken();
			}
			else if (t < 0 && t > -32768) {
				var idx = -t;
				var p = tRules[idx];
				var num = p.length - 1;
				stateStack.length -= num;
				s = tGoto[stateStack[stateStack.length - 1]][p[0]];
				stateStack.push(s);

				if (tFuncs[idx]) {
					var val = tFuncs[idx].apply(obj, valueStack.splice(valueStack.length - num, num));
					valueStack.push(val);
				}
				else if (num != 1) {
					valueStack.splice(valueStack.length - num, num, null);
				}
			}
			else {
				if (a.tag != tSymbols[0]) err();
				return valueStack[0];
			}
		}
		function err(msg) {
			throw Error('Syntax error: ' + lexer.getPos(a.index) + (msg ? '\n' + msg : ''));
		}
	}
	return parse;
}();